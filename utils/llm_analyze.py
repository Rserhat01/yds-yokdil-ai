# ğŸ“„ utils/llm_analyze.py

import streamlit as st
import openai

# OpenAI API anahtarÄ±nÄ± streamlit secrets'tan al
openai.api_key = st.secrets["OPENAI_API_KEY"]

# Ä°stemci nesnesine gerek yok, direkt openai.chat.completions.create kullanÄ±lacak

def analyze_question(text: str) -> str:
    """
    Verilen soruyu analiz eder ve 3 satÄ±rlÄ±k YÃ–KDÄ°L/YDS formatÄ±nda cevap Ã¼retir.

    1. satÄ±r: DoÄŸru ÅŸÄ±k ("C ÅŸÄ±kkÄ±")
    2. satÄ±r: TÃ¼rkÃ§e aÃ§Ä±klama + Ã§eviri (sade)
    3. satÄ±r: Ã–nem ve Ã§Ä±kma ihtimali ("x/10")
    """

    prompt = f"""
Soru: {text}

Sen deneyimli bir YÃ–KDÄ°L/YDS eÄŸitmenisin.
AÅŸaÄŸÄ±daki kurallara gÃ¶re sadece 3 satÄ±rdan oluÅŸan cevap Ã¼ret:

1. satÄ±r: Sadece doÄŸru ÅŸÄ±kkÄ± yaz ("C ÅŸÄ±kkÄ±")
2. satÄ±r: TÃ¼rkÃ§e aÃ§Ä±klama + Ã§eviri (kÄ±sa, sade)
3. satÄ±r: Ã–nem: x/10 | Ã‡Ä±kma ihtimali: x/10

BaÅŸka aÃ§Ä±klama yazma, sadece 3 satÄ±rlÄ±k sade Ã§Ä±ktÄ± ver.
"""

    try:
        response = openai.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "Sen uzman bir YÃ–KDÄ°L/YDS analiz asistanÄ±sÄ±n."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3,
            max_tokens=300
        )
        return response.choices[0].message.content.strip()

    except Exception as e:
        st.error("LLM cevabÄ± alÄ±nÄ±rken hata oluÅŸtu.")
        return f"[HATA] LLM cevap verirken sorun oluÅŸtu: {e}"
